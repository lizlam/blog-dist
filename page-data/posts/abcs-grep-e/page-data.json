{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/abcs-grep-e","result":{"data":{"markdownRemark":{"id":"69c8c748-cdae-5431-9df5-362bb2840fc6","html":"<h2 id=\"e\" style=\"position:relative;\"><a href=\"#e\" aria-label=\"e permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>E</h2>\n<p>Use the <code class=\"language-text\">-E</code> or <code class=\"language-text\">-e</code> flag to treat your search term as a regular expression.  The lowercase <code class=\"language-text\">-e</code> is used for <em>basic</em> regular expressions which includes: <code class=\"language-text\">^$.[]*</code>.\nThe uppercase <code class=\"language-text\">-E</code> includes the <em>extended</em> regular expressions: <code class=\"language-text\">(){}?~|</code>.</p>\n<p>Let’s go back to our file <code class=\"language-text\">test.txt</code> with the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sad\nhappy\nawake\ncoffee\nwork\nschool</code></pre></div>\n<p>Suppose we wanted to use a regular expression that searches for all the words that ends in “e”.  We would do something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ grep -e \"e$\" test.txt\nawake\ncoffee</code></pre></div>\n<p>In reality, this already happens by default.  You could easily run the same <code class=\"language-text\">grep</code> command without the <code class=\"language-text\">-e</code> flag and get the same results.  The real power is being able to use <code class=\"language-text\">-e</code> multiple times to construct the perfect search.  Let’s say we wanted to search for all words that end in “e” <em>or</em> starts with “w”.</p>\n<p>We could accomplish that like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ grep -e \"e$\" -e \"^w\" test.txt\nawake\ncoffee\nwork</code></pre></div>\n<p>If you wanted to use the <em>extended</em> regular expressions like the <code class=\"language-text\">|</code> symbol, you must use <code class=\"language-text\">-E</code>.\nFor example this is the search for lines with “sad” or “happy”:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ grep -E \"sad|happy\" test.txt\nsad\nhappy</code></pre></div>\n<p>Using -e with the above would return zero rows.</p>\n<p>Want to see this in action?  Check out the video below.</p>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <iframe src=\"https://www.youtube.com/embed/B65MhN43o7M?si=oaK-Db2dyNrXrHuq\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>","fields":{"slug":"/posts//posts/abcs-grep-e","tagSlugs":null},"frontmatter":{"date":"2023-10-30","description":"What does grep -[eE] do?","tags":null,"title":"The ABC's of grep - E","socialImage":null}}},"pageContext":{"slug":"/posts//posts/abcs-grep-e"}},"staticQueryHashes":["251939775","2764776372","401334301"]}