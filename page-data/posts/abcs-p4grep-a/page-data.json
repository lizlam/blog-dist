{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/abcs-p4grep-a","result":{"data":{"markdownRemark":{"id":"f74c030e-326c-5c8c-bd72-d26008e15fd1","html":"<p>Welcome to The ABC’s of p4 grep!</p>\n<p>Here we will explore the different flags for the p4 grep commands.</p>\n<p>Let’s start!</p>\n<h2 id=\"a\" style=\"position:relative;\"><a href=\"#a\" aria-label=\"a permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A</h2>\n<p>Much like the regular <code class=\"language-text\">grep</code>, use the <code class=\"language-text\">-A</code> flag to show the lines <em>after</em> the matching search term is found.</p>\n<p>Suppose you have a file named <code class=\"language-text\">test.txt</code> with the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sad\nhappy\nawake\ncoffee\nwork\nschool</code></pre></div>\n<p>You would search for the word “happy” like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ grep -e happy test.txt\n//depot/test.txt#6:happy</code></pre></div>\n<p>To see the first 2 lines after happy, execute the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ grep -A 2 -e happy test.txt\n//depot/test.txt#6:happy\n//depot/test.txt#6-awake\n//depot/test.txt#6-coffee</code></pre></div>\n<p>Now the lowercase <code class=\"language-text\">-a</code> flag stands for “all revisions”. <code class=\"language-text\">p4 grep</code> by default\nonly greps through the latest revision.</p>\n<p>Suppose we have a <code class=\"language-text\">helloworld.txt</code> file with the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">p4 print helloworld.txt\n//depot/helloworld.txt#2 - edit change 9 (text)\nHello world!</code></pre></div>\n<p>Let’s search for the term “earth”:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">p4 grep -e earth helloworld.txt</code></pre></div>\n<p>Nothing. Well, duh! Didn’t you see above that the content of the file is <code class=\"language-text\">Hello world</code>!\nThis is true for the latest revision (#2), but we can <code class=\"language-text\">p4 print</code> the first revision to reveal:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">p4 print helloworld.txt#1\n//depot/helloworld.txt#1 - add change 8 (text)\nHello earth!</code></pre></div>\n<p>So the word “earth” <em>was</em> in the file, this is where the <code class=\"language-text\">-a</code> flag comes in handy.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">p4 grep -a -e earth helloworld.txt\n//depot/helloworld.txt#1:Hello earth!</code></pre></div>\n<p>So use <code class=\"language-text\">-a</code> when searching for a term in all the revisions of a file.</p>","fields":{"slug":"/posts//posts/abcs-p4grep-a","tagSlugs":null},"frontmatter":{"date":"2025-05-28","description":"Welcome to the ABC's of p4 grep.","tags":null,"title":"The ABC's of p4 grep - A","socialImage":null}}},"pageContext":{"slug":"/posts//posts/abcs-p4grep-a"}},"staticQueryHashes":["251939775","2764776372","401334301"]}