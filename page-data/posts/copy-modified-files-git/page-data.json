{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/copy-modified-files-git","result":{"data":{"markdownRemark":{"id":"63a42500-bbc7-59ae-91e2-2327f4959ee9","html":"<p>For one reason or another, I occasionally find myself in a place where I want to copy off all my modified files in my local git repository and start over.  This is usually due to painful merges where I just want a fresh start.  This is the one-liner you can use to do just that:</p>\n<p><code class=\"language-text\">git status --porcelain=v1 | awk {'print $2'} | xargs -I {} cp -r {} ../dir_with_changed_files</code></p>\n<p>Letâ€™s break down each part of this line in detail.</p>\n<p><code class=\"language-text\">git status --porcelain=v1</code></p>\n<p>You may be familiar with <code class=\"language-text\">git status</code>, adding the <code class=\"language-text\">--porcelain=v1</code> flag just changes the output from this:</p>\n<p><img src=\"/media/git_status.png\" alt=\"git status image\"></p>\n<p>to this:</p>\n<p><img src=\"/media/git_status_porcelain.png\" alt=\"git status porcelain image\"></p>\n<p><code class=\"language-text\">awk {'print $2'}</code></p>\n<p>This awk command will print the 2nd column of <a href=\"https://linux.die.net/man/3/stdout\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">standard out</a> (i.e. what is printed on the screen).  In our case, this will print out the column with the file names from the previous <code class=\"language-text\">git status --porcelain=v1</code> command.</p>\n<p><code class=\"language-text\">xargs -I {} cp -r {} ../dir_with_changed_files</code></p>\n<p>This portion of the command utilizes the <a href=\"http://man7.org/linux/man-pages/man1/xargs.1.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">xargs</a> tool which allows iteration over things coming from standard input.  In this case, standard input for the <code class=\"language-text\">xargs</code> command is the standard output from the previous <code class=\"language-text\">awk</code> command.  Which take the list of files and copies it to the <code class=\"language-text\">../dir_with_changed_files</code> directory.</p>","fields":{"slug":"/posts//posts/copy-modified-files-git","tagSlugs":["/tag/command-line/","/tag/bash/"]},"frontmatter":{"date":"2019-05-15","description":"Copy off all your modified files and start over in git.","tags":["command line","bash"],"title":"Copy Your Modified Files in Git with 1 line","socialImage":null}}},"pageContext":{"slug":"/posts//posts/copy-modified-files-git"}},"staticQueryHashes":["251939775","2764776372","401334301","63107425"]}