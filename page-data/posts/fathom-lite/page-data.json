{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/fathom-lite","result":{"data":{"markdownRemark":{"id":"d5c2eb48-e5fd-5dd7-ba5d-2aee6c2b3878","html":"<p><img src=\"/media/analytics-cover.jpg\" alt=\"cover\">\n<span>Photo by <a href=\"https://unsplash.com/@markuswinkler?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Markus Winkler</a> on <a href=\"https://unsplash.com/s/photos/charts?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></p>\n<p>I have recently been playing around with <a href=\"https://usefathom.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fathom</a> to gather visitor stats on my websites.  I really like its promise of being a “simple, light-weight privacy-first alternative to Google Analytic”.</p>\n<p>It was also appealing that they offer a <a href=\"https://github.com/usefathom/fathom\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lite version</a> for those who wish to self host.  Seeing they provided a pre-built Docker image made it a no-brainer to want to give it a spin. It took a bit of configuration to get everything working and I’ve documented the steps here in case it’s helpful for anyone else (AKA me in 6 months).</p>\n<p>So before diving into the details, this is the overall picture of the setup:</p>\n<p><img src=\"/media/fathom-lite-overview.png\" alt=\"diagram\"></p>\n<ul>\n<li>The Fathom server is running on port 7070.</li>\n<li>The nginx server is running on port 8080.</li>\n<li>The container’s port 8080 is bound to the host’s port 9090.</li>\n</ul>\n<hr />\n<p>On my host machine as root:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir /opt/fathom</code></pre></div>\n<p>Create a <code class=\"language-text\">fathom.conf</code> file in <code class=\"language-text\">/opt/fathom</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">server {\n\tserver_name your.domain.name;\n\n\tlocation / {\n\t\tproxy_set_header X-Real-IP $remote_addr;\n\t\tproxy_set_header X-Forwarded-For $remote_addr;\n\t\tproxy_set_header Host $host;\n\t\tproxy_pass http://127.0.0.1:7070; \n\t}  \n}</code></pre></div>\n<p>We will be mapping above <code class=\"language-text\">fathom.conf</code> file to a directory in the container to be used by nginx.</p>\n<p>Create an <code class=\"language-text\">.env</code> file (also in /opt/fathom):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">FATHOM_SERVER_ADDR=\":7070\"\nFATHOM_DATABASE_NAME=\"/app/config/fathom.db\"</code></pre></div>\n<p>This <code class=\"language-text\">.env</code> file will start the fathom server on port 7070 and place the sqlite db file in <code class=\"language-text\">/app/config</code> in the Docker container.</p>\n<p>Ok, let’s start our Docker container:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo docker run -d -v /opt/fathom:/app/config -p 9090:8080 -p 80:80 --name fathom usefathom/fathom:latest ./fathom --config /app/config/.env server</code></pre></div>\n<p>Woah!! Woah!! Woah!! I know what you’re thinking.  What the heck is going on here??!!!</p>\n<p>Let’s break down in this docker command:</p>\n<p><code class=\"language-text\">sudo docker run -d</code> - This runs the Docker container.</p>\n<p><code class=\"language-text\">-v /opt/fathom:/app/config</code> - This maps a volume from our host machine (<code class=\"language-text\">/opt/fathom</code>) to a directory in our Docker container (<code class=\"language-text\">/app/config</code>).</p>\n<p><code class=\"language-text\">-p 9090:8080 -p 80:80</code> - This exposes the container’s port 8080 as the host’s port 9090.  The second argument exposes port 80 as itself.  This will be needed for generating a Let’s Encrypt SSL certificate.</p>\n<p><code class=\"language-text\">--name fathom</code> - This names the container so we can easily reference it.</p>\n<p><code class=\"language-text\">usefathom/fathom:latest</code> - This pulls down the pre-built Docker container provided by Fathom.</p>\n<p><code class=\"language-text\">./fathom --config /app/config/.env server</code> - This starts the fathom server using the <code class=\"language-text\">.env</code> file we just created and mapped into the container.</p>\n<p>Now that we have created a running Docker container, we can access it with an interactive bash shell with the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo docker exec -it fathom /bin/bash</code></pre></div>\n<p>NOTE: I didn’t give docker the permissions needed to run it without <code class=\"language-text\">sudo</code>.</p>\n<p>Once in the container, you should be in the <code class=\"language-text\">/app</code> directory.</p>\n<p>Let’s create a fathom user:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">fathom --config /app/config/.env user add --email=\"your@email.com\" --password=\"strong-password\"</code></pre></div>\n<p>Install nginx, certbot and the certbot/nginx plugin:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apk add certbot certbot-nginx nginx</code></pre></div>\n<p>NOTE: The pre-built Docker container is based on the <a href=\"https://alpinelinux.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Alpine Linux</a> distribution. Coincidentally, the host machine I’m using is a <a href=\"https://www.linode.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Linode</a> that is also Alpine Linux.</p>\n<p>Symlink the previously created <code class=\"language-text\">fathom.conf</code> so nginx can use it:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ln -s /app/config/fathom.conf /etc/nginx/conf.d/fathom.conf    </code></pre></div>\n<p>Create certs from Let’s Encrypt:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir /run/nginx\ncertbot --nginx -d your-site.com</code></pre></div>\n<p>There will be a series of questions you will need to answer and once done there be updates to your conf file.</p>\n<p>Open up <code class=\"language-text\">/etc/nginx/conf.d/fathom.conf</code> and find the updated section.  It should looks something like this (excerpt):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    listen 80; # managed by Certbot\n\n    listen 443 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/yoursite.com/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/yoursite.com/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n\n</code></pre></div>\n<p>Replace <code class=\"language-text\">443</code> to <code class=\"language-text\">8080</code>, the final content should look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">server {\n\tserver_name your.domain.name;\n\n\tlocation / {\n\t\tproxy_set_header X-Real-IP $remote_addr;\n\t\tproxy_set_header X-Forwarded-For $remote_addr;\n\t\tproxy_set_header Host $host;\n\t\tproxy_pass http://127.0.0.1:7070; \n\t}  \n\n    listen 80; # managed by Certbot\n\n    listen 8080 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/yoursite.com/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/yoursite.com/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n}</code></pre></div>\n<p>Run nginx:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nginx -t\nnginx</code></pre></div>\n<p>Whew! That was a lot! Now go to <code class=\"language-text\">https://yourdomain.com:9090</code> to see your freshly installed Fathom Lite dashboard!</p>","fields":{"slug":"/posts//posts/fathom-lite","tagSlugs":null},"frontmatter":{"date":"2020-12-19","description":"Setting up an alternative to Google Analytics.","tags":null,"title":"Setting up Fathom Lite in a Docker Container","socialImage":null}}},"pageContext":{"slug":"/posts//posts/fathom-lite"}},"staticQueryHashes":["251939775","2764776372","401334301","63107425"]}