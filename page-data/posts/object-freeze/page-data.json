{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/object-freeze","result":{"data":{"markdownRemark":{"id":"c5f064fb-3686-52de-bbff-d16a84c3b0e7","html":"<p>One of the things that confused me initially during my JavaScript learning journey was the <code class=\"language-text\">const</code> keyword.  I thought it was akin to <code class=\"language-text\">const</code> in C++ where the declared variable would be immutable. </p>\n<p>This is not the case in JavaScript.</p>\n<p>The <code class=\"language-text\">const</code> keyword does not create immutability as the name would imply (i.e. no changes allowed), but actually prevents reassignment.</p>\n<p>So how do you make JavaScript objects immutable?</p>\n<p>That’s where <code class=\"language-text\">Object.freeze()</code> comes in.  It is a way to <strong>freeze</strong> an object and as it implies, a frozen object can not be changed.</p>\n<p>Let’s look at an example in our browser console.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">>> const myinfo = { name: \"Liz\", title: \"Frontend Engineer\" }</code></pre></div>\n<p>Now let’s change my title via property access:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">>> myinfo.title = \"Elephant Trainer\"\n>> myinfo\nObject { name: \"Liz\", title: \"Elephant Trainer\" }</code></pre></div>\n<p>No problem, as long as we not reassigning anything to <code class=\"language-text\">myinfo</code>, my <code class=\"language-text\">name</code> and <code class=\"language-text\">title</code> are mutable for all to change.</p>\n<p>Let’s say we do something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">>> const myinfo2 = Object.freeze(myinfo)</code></pre></div>\n<p><code class=\"language-text\">Object.freeze(myinfo)</code> returns the frozen version of <code class=\"language-text\">myinfo</code> to <code class=\"language-text\">myinfo2</code>.  </p>\n<p>Now before you break out into a song of “Let it Go”, it might not be totally obvious that <code class=\"language-text\">myinfo2</code> is frozen.</p>\n<p><code class=\"language-text\">myinfo2.title = \"Ballet Dancer\"</code> doesn’t throw any errors but upon inspection, you will see nothing has changed.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">>> myinfo2\nObject { name: \"Liz\", title: \"Elephant Trainer\" }</code></pre></div>\n<p>In conclusion, if you are looking for a way to make objects unchangeable in JavaScript, <code class=\"language-text\">const</code> is not the keyword your are looking for.  Use <code class=\"language-text\">Object.freeze()</code> for your immutability needs.</p>","fields":{"slug":"/posts/object-freeze","tagSlugs":null},"frontmatter":{"date":"2020-05-05","description":"Need immutable objects?","tags":null,"title":"Make Your Object Unchangeable with Object.freeze()","socialImage":null}}},"pageContext":{"slug":"/posts/object-freeze"}},"staticQueryHashes":["251939775","401334301","914177244"]}