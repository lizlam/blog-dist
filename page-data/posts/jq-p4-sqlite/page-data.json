{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/jq-p4-sqlite","result":{"data":{"markdownRemark":{"id":"006d7c13-46b8-544c-b300-b598ff3a24c8","html":"<p>There are so many possibilities once data is structured. In my <a href=\"https://grepliz.netlify.app/posts/jq-p4-changes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">last post</a> about formating <code class=\"language-text\">p4 changes</code> out to JSON, it occurred to me it would be fairly trivial to put this same data into a <a href=\"https://www.sqlite.org/index.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SQLite</a> databasse.</p>\n<p>As show in the <a href=\"https://grepliz.netlify.app/posts/jq-p4-changes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">previous post</a>, <code class=\"language-text\">p4 changes</code> output can be converted to JSON data like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">p4 changes | jq -R -s '[split(\"\\n\")[:-1] | map(split(\"\\u0020\")) | .[] | { \"change\": .[1], \"author\": .[5], \"date\": .[3], \"message\": .[6:length] | join(\" \") }]'\n\n[\n  {\n    \"change\": \"3\",\n    \"author\": \"grepliz@test-local-01\",\n    \"date\": \"2023/07/20\",\n    \"message\": \"'Add day1.pdf'\"\n  },\n  {\n    \"change\": \"2\",\n    \"author\": \"grepliz@test-local-01\",\n    \"date\": \"2023/07/20\",\n    \"message\": \"'Add crazy.psd.'\"\n  },\n  {\n    \"change\": \"1\",\n    \"author\": \"grepliz@test-local-01\",\n    \"date\": \"2023/07/20\",\n    \"message\": \"'Populated server with files '\"\n  }\n]</code></pre></div>\n<p>For brevity’s sake, I’m going to redirect that output to a file called <code class=\"language-text\">json.txt</code> and <code class=\"language-text\">cat</code> it for the rest of the examples.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">p4 changes | jq -R -s '[split(\"\\n\")[:-1] | map(split(\"\\u0020\")) | .[] | { \"change\": .[1], \"author\": .[5], \"date\": .[3], \"message\": .[6:length] | join(\" \") }]' > json.txt</code></pre></div>\n<h2 id=\"creating-the-insert-statements\" style=\"position:relative;\"><a href=\"#creating-the-insert-statements\" aria-label=\"creating the insert statements permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CREATING THE INSERT STATEMENTS</h2>\n<p>We can now pipe the JSON data back into another <code class=\"language-text\">jq</code> filter to produce the <code class=\"language-text\">insert</code> statements needed for a SQLite database.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cat json.txt | jq -r '.[] | \"insert into changes values (\\(.change), \\\"\\(.author)\\\", \\\"\\(.date)\\\", \\(.message));\"'             \n\ninsert into changes values (3, \"grepliz@test-local-01\", \"2023/07/20\", 'Add day1.pdf');\ninsert into changes values (2, \"grepliz@test-local-01\", \"2023/07/20\", 'Add crazy.psd.');\ninsert into changes values (1, \"grepliz@test-local-01\", \"2023/07/20\", 'Populated server with files ');</code></pre></div>\n<p>The key to this <code class=\"language-text\">jq</code> filter is using string interpolation via <code class=\"language-text\">\\(exp)</code> which is documented here:<br>\n<a href=\"https://jqlang.github.io/jq/manual/#Stringinterpolation:%5C(exp)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://jqlang.github.io/jq/manual/#Stringinterpolation:\\(exp)</a></p>\n<p>Because the <code class=\"language-text\">insert</code> statement contains characters that can make the filter a bit of a bear to look at (parenthesis and quotations), let’s look at a simpler example.</p>\n<p>Suppose we just wanted to create a sentence with this format:</p>\n<p><strong>Changelist number X was writte by Y on Z.</strong></p>\n<p>What would that look like?</p>\n<p>Using the <code class=\"language-text\">\\(exp)</code> syntax, we can do something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cat json.txt | jq -r '.[] | \"Changelist number \\(.change) was written by \\(.author) on \\(.date)\"'                 \n\nChangelist number 3 was written by grepliz@test-local-01 on 2023/07/20\nChangelist number 2 was written by grepliz@test-local-01 on 2023/07/20\nChangelist number 1 was written by grepliz@test-local-01 on 2023/07/20</code></pre></div>\n<p>Now suppose we wanted to quote the author in our sentence, we would need to add quotation marks and escape them like this: <code class=\"language-text\">\\\"(.author)\\\"</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cat json.txt | jq -r '.[] | \"Changelist number \\(.change) was written by \\\"\\(.author)\\\" on \\(.date).\"'\n\nChangelist number 3 was written by \"grepliz@test-local-01\" on 2023/07/20.\nChangelist number 2 was written by \"grepliz@test-local-01\" on 2023/07/20.\nChangelist number 1 was written by \"grepliz@test-local-01\" on 2023/07/20.</code></pre></div>\n<p>Putting it all together, we arrive at this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cat json.txt | jq -r '.[] | \"insert into changes values (\\(.change), \\\"\\(.author)\\\", \\\"\\(.date)\\\", \\(.message));\"'\n\ninsert into changes values (3, \"grepliz@test-local-01\", \"2023/07/20\", 'Add day1.pdf');\ninsert into changes values (2, \"grepliz@test-local-01\", \"2023/07/20\", 'Add crazy.psd.');\ninsert into changes values (1, \"grepliz@test-local-01\", \"2023/07/20\", 'Populated server with files ');</code></pre></div>\n<p>Now we just need to redirect this to a file called <code class=\"language-text\">insert.sql</code> and we will import the data into a SQLite database (i.e. append <code class=\"language-text\">> insert.sql</code> to the above statement).</p>\n<h2 id=\"setting-up-the-sqlite-database\" style=\"position:relative;\"><a href=\"#setting-up-the-sqlite-database\" aria-label=\"setting up the sqlite database permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SETTING UP THE SQLITE DATABASE</h2>\n<p>Create a SQLite database like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sqlite3 changelists.db</code></pre></div>\n<p>This will create a file called <code class=\"language-text\">changelists.db</code> in your current directory and take you the a SQLite interactive prompt.</p>\n<p>Create a table with a schema that matches the values in the <code class=\"language-text\">insert.sql</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sqlite> CREATE TABLE changes (\n   ...>     change INTEGER PRIMARY KEY, \n   ...>     author TEXT NOT NULL, \n   ...>     date TEXT NOT NULL, \n   ...>     Message TEXT NOT NULL\n   ...> );</code></pre></div>\n<p>We now have an empty table called <code class=\"language-text\">changes</code>.  If we try to <code class=\"language-text\">select</code> from this table, we see that it is empty as indicated by the fact that nothing is returned.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sqlite> select * from changes;</code></pre></div>\n<p>Let’s toggle some options to make the SQL output look a little nicer when we do populate the table.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sqlite> .headers on\nsqlite> .mode columns</code></pre></div>\n<p>We can now add a dummy row to see what it will look like.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sqlite> insert into changes values (0, \"liz\", \"today\", \"this is a changelist description.\");\nsqlite> select * from changes;\nchange  author  date   Message                          \n------  ------  -----  ---------------------------------\n0       liz     today  this is a changelist description.</code></pre></div>\n<p>Great, that looks pretty good.  Now let’s import the <code class=\"language-text\">insert.sql</code> file we just created.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sqlite> .read insert.sql\nsqlite> select * from changes;\nchange  author                 date        Message                          \n------  ---------------------  ----------  ---------------------------------\n0       liz                    today       this is a changelist description.\n1       grepliz@test-local-01  2023/07/20  Populated server with files      \n2       grepliz@test-local-01  2023/07/20  Add crazy.psd.                   \n3       grepliz@test-local-01  2023/07/20  Add day1.pdf                     </code></pre></div>\n<p>Next, let’s delete our dummy row.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sqlite> delete from changes where change = 0;\nsqlite> select * from changes;\nchange  author                 date        Message                     \n------  ---------------------  ----------  ----------------------------\n1       grepliz@test-local-01  2023/07/20  Populated server with files \n2       grepliz@test-local-01  2023/07/20  Add crazy.psd.              \n3       grepliz@test-local-01  2023/07/20  Add day1.pdf                </code></pre></div>\n<p>Voila! Now we have a SQLite database with a populated <code class=\"language-text\">changes</code> table.</p>","fields":{"slug":"/posts//posts/jq-p4-sqlite","tagSlugs":["/tag/p4/","/tag/jq/","/tag/sqlite/"]},"frontmatter":{"date":"2023-07-26","description":"Create insert statements from p4 changes output.","tags":["p4","jq","sqlite"],"title":"Use jq to format p4 changes output to SQLite","socialImage":null}}},"pageContext":{"slug":"/posts//posts/jq-p4-sqlite"}},"staticQueryHashes":["251939775","2764776372","401334301"]}