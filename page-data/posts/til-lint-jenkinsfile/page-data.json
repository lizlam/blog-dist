{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til-lint-jenkinsfile","result":{"data":{"markdownRemark":{"id":"a8620051-94ae-5bff-aa15-03491def53a5","html":"<p><em>Today I Learned</em> how to lint a Jenkinsfile.  Linting is the process of running some program that will verify your code for syntax errors.  I’ve been finding myself writing a lot of Jenkinsfiles lately and it’s a bit of a pain to write directly into the Jenkins UI where the linting happens.  There doesn’t seem to be any external plugins for IDE’s and editors, so in the meantime I was able to use Jenkins CLI to accomplish this in two steps. </p>\n<p><strong>Step 1: Download the Jenkins CLI</strong><br>\nOpen a browser and navigate to:<br>\n<code class=\"language-text\">http//JENKINS_URL/jnlpJars/jenkins-cli.jar</code></p>\n<p><strong>Step 2: Execute the Linter</strong><br>\n<code class=\"language-text\">java -jar jenkins-cli.jar -s http://JENKINS_URL declarative-linter &lt; /path/to/Jenkinsfile</code></p>\n<p>And that’s it!  It’s a simple but manual process.  This could probably be easily scripted in an external tool in Eclipse or some other IDE.  I tend to write my Jenkinsfiles in vi so it would be an interesting to see if I can simply record a macro to lint my current file. </p>","fields":{"slug":"/posts/til-lint-jenkinsfile","tagSlugs":null},"frontmatter":{"date":"2017-09-06","description":"Today I learned how to lint a Jenkinsfile.","tags":null,"title":"Today I Learned How to Lint a Jenkinsfile","socialImage":null}}},"pageContext":{"slug":"/posts/til-lint-jenkinsfile"}}}